using UnityEngine;
using GlobalEnums;

public class HeroController : MonoBehaviour
{
	public HeroType heroType;
	public float RUN_SPEED;
	public float RUN_SPEED_CH;
	public float RUN_SPEED_CH_COMBO;
	public float WALK_SPEED;
	public float UNDERWATER_SPEED;
	public float JUMP_SPEED;
	public float JUMP_SPEED_UNDERWATER;
	public float MIN_JUMP_SPEED;
	public int JUMP_STEPS;
	public int JUMP_STEPS_MIN;
	public int JUMP_TIME;
	public int DOUBLE_JUMP_STEPS;
	public int WJLOCK_STEPS_SHORT;
	public int WJLOCK_STEPS_LONG;
	public float WJ_KICKOFF_SPEED;
	public int WALL_STICKY_STEPS;
	public float DASH_SPEED;
	public float DASH_SPEED_SHARP;
	public float DASH_TIME;
	public int DASH_QUEUE_STEPS;
	public float BACK_DASH_SPEED;
	public float BACK_DASH_TIME;
	public float SHADOW_DASH_SPEED;
	public float SHADOW_DASH_TIME;
	public float SHADOW_DASH_COOLDOWN;
	public float SUPER_DASH_SPEED;
	public float DASH_COOLDOWN;
	public float DASH_COOLDOWN_CH;
	public float BACKDASH_COOLDOWN;
	public float WALLSLIDE_SPEED;
	public float WALLSLIDE_DECEL;
	public float NAIL_CHARGE_TIME_DEFAULT;
	public float NAIL_CHARGE_TIME_CHARM;
	public float CYCLONE_HORIZONTAL_SPEED;
	public float SWIM_ACCEL;
	public float SWIM_MAX_SPEED;
	public float TIME_TO_ENTER_SCENE_BOT;
	public float TIME_TO_ENTER_SCENE_HOR;
	public float SPEED_TO_ENTER_SCENE_HOR;
	public float SPEED_TO_ENTER_SCENE_UP;
	public float SPEED_TO_ENTER_SCENE_DOWN;
	public float DEFAULT_GRAVITY;
	public float UNDERWATER_GRAVITY;
	public float ATTACK_DURATION;
	public float ATTACK_DURATION_CH;
	public float ALT_ATTACK_RESET;
	public float ATTACK_RECOVERY_TIME;
	public float ATTACK_COOLDOWN_TIME;
	public float ATTACK_COOLDOWN_TIME_CH;
	public float BOUNCE_TIME;
	public float BOUNCE_SHROOM_TIME;
	public float BOUNCE_VELOCITY;
	public float SHROOM_BOUNCE_VELOCITY;
	public float RECOIL_HOR_TIME;
	public float RECOIL_HOR_VELOCITY;
	public float RECOIL_HOR_VELOCITY_LONG;
	public float RECOIL_HOR_STEPS;
	public float RECOIL_DOWN_VELOCITY;
	public float RUN_PUFF_TIME;
	public float BIG_FALL_TIME;
	public float HARD_LANDING_TIME;
	public float DOWN_DASH_TIME;
	public float MAX_FALL_VELOCITY;
	public float MAX_FALL_VELOCITY_UNDERWATER;
	public float RECOIL_DURATION;
	public float RECOIL_DURATION_STAL;
	public float RECOIL_VELOCITY;
	public float DAMAGE_FREEZE_DOWN;
	public float DAMAGE_FREEZE_WAIT;
	public float DAMAGE_FREEZE_UP;
	public float INVUL_TIME;
	public float INVUL_TIME_STAL;
	public float INVUL_TIME_PARRY;
	public float INVUL_TIME_QUAKE;
	public float INVUL_TIME_CYCLONE;
	public float CAST_TIME;
	public float CAST_RECOIL_TIME;
	public float CAST_RECOIL_VELOCITY;
	public float WALLSLIDE_CLIP_DELAY;
	public int GRUB_SOUL_MP;
	public int GRUB_SOUL_MP_COMBO;
	public ActorStates hero_state;
	public ActorStates prev_hero_state;
	public HeroTransitionState transitionState;
	public DamageMode damageMode;
	public float move_input;
	public float vertical_input;
	public float controller_deadzone;
	public Vector2 current_velocity;
	public bool isEnteringFirstLevel;
	public Vector2 slashOffset;
	public Vector2 upSlashOffset;
	public Vector2 downwardSlashOffset;
	public Vector2 spell1Offset;
	public float parryInvulnTimer;
	public GameObject slashPrefab;
	public GameObject slashAltPrefab;
	public GameObject upSlashPrefab;
	public GameObject downSlashPrefab;
	public GameObject wallSlashPrefab;
	public NailSlash normalSlash;
	public NailSlash alternateSlash;
	public NailSlash upSlash;
	public NailSlash downSlash;
	public NailSlash wallSlash;
	public PlayMakerFSM normalSlashFsm;
	public PlayMakerFSM alternateSlashFsm;
	public PlayMakerFSM upSlashFsm;
	public PlayMakerFSM downSlashFsm;
	public PlayMakerFSM wallSlashFsm;
	public GameObject nailTerrainImpactEffectPrefab;
	public GameObject spell1Prefab;
	public GameObject takeHitPrefab;
	public GameObject takeHitDoublePrefab;
	public GameObject softLandingEffectPrefab;
	public GameObject hardLandingEffectPrefab;
	public GameObject runEffectPrefab;
	public GameObject backDashPrefab;
	public GameObject jumpEffectPrefab;
	public GameObject jumpTrailPrefab;
	public GameObject fallEffectPrefab;
	public ParticleSystem wallslideDustPrefab;
	public GameObject artChargeEffect;
	public GameObject artChargedEffect;
	public GameObject artChargedFlash;
	public tk2dSpriteAnimator artChargedEffectAnim;
	public GameObject shadowdashBurstPrefab;
	public GameObject shadowdashDownBurstPrefab;
	public GameObject dashParticlesPrefab;
	public GameObject shadowdashParticlesPrefab;
	public GameObject shadowRingPrefab;
	public GameObject shadowRechargePrefab;
	public GameObject dJumpWingsPrefab;
	public GameObject dJumpFlashPrefab;
	public ParticleSystem dJumpFeathers;
	public GameObject wallPuffPrefab;
	public GameObject sharpShadowPrefab;
	public GameObject grubberFlyBeamPrefabL;
	public GameObject grubberFlyBeamPrefabR;
	public GameObject grubberFlyBeamPrefabU;
	public GameObject grubberFlyBeamPrefabD;
	public GameObject grubberFlyBeamPrefabL_fury;
	public GameObject grubberFlyBeamPrefabR_fury;
	public GameObject grubberFlyBeamPrefabU_fury;
	public GameObject grubberFlyBeamPrefabD_fury;
	public GameObject carefreeShield;
	public GameObject corpsePrefab;
	public GameObject spikeDeathPrefab;
	public GameObject acidDeathPrefab;
	public GameObject lavaDeathPrefab;
	public GameObject heroDeathPrefab;
	public GameObject cutscenePrefab;
	public HeroControllerStates cState;
	public PlayerData playerData;
	public UIManager ui;
	public PlayMakerFSM damageEffectFSM;
	public AudioSource footStepsRunAudioSource;
	public AudioSource footStepsWalkAudioSource;
	public GatePosition gatePosition;
	public bool acceptingInput;
	public bool controlReqlinquished;
	public bool enterWithoutInput;
	public bool lookingUpAnim;
	public bool lookingDownAnim;
	public bool carefreeShieldEquipped;
	public bool touchingWallL;
	public bool touchingWallR;
	public bool wallSlidingL;
	public bool wallSlidingR;
	public bool dashingDown;
	public bool wieldingLantern;
	public bool inAcid;
	public bool wallLocked;
	public float conveyorSpeed;
	public float conveyorSpeedV;
	public bool exitedSuperDashing;
	public bool exitedQuake;
	public bool takeNoDamage;
	public bool fadedSceneIn;
	[SerializeField]
	private Vector2[] positionHistory;
	public AudioClip footstepsRunDust;
	public AudioClip footstepsRunGrass;
	public AudioClip footstepsRunBone;
	public AudioClip footstepsRunSpa;
	public AudioClip footstepsRunMetal;
	public AudioClip footstepsRunWater;
	public AudioClip footstepsWalkDust;
	public AudioClip footstepsWalkGrass;
	public AudioClip footstepsWalkBone;
	public AudioClip footstepsWalkSpa;
	public AudioClip footstepsWalkMetal;
	public AudioClip nailArtCharge;
	public AudioClip nailArtChargeComplete;
	public AudioClip blockerImpact;
	public AudioClip shadowDashClip;
	public AudioClip sharpShadowClip;
	public AudioClip doubleJumpClip;
	public AudioClip mantisClawClip;
	public PlayMakerFSM vignetteFSM;
	public SpriteRenderer heroLight;
	public SpriteRenderer vignette;
	public PlayMakerFSM dashBurst;
	public PlayMakerFSM superDash;
	public PlayMakerFSM fsm_thornCounter;
	public PlayMakerFSM spellControl;
	public PlayMakerFSM fsm_fallTrail;
	public PlayMakerFSM fsm_orbitShield;
	public VibrationData softLandVibration;
	public VibrationData wallJumpVibration;
	public VibrationPlayer wallSlideVibrationPlayer;
	public VibrationData dashVibration;
	public VibrationData shadowDashVibration;
	public VibrationData doubleJumpVibration;
	public bool isHeroInPosition;
}
